server {
    listen 80;
    listen [::]:80;
    server_name vahfanforever.com;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name vahfanforever.com;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/vahfanforever.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/vahfanforever.com/privkey.pem;

    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_prefer_server_ciphers off;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Root redirect to spotify-connector
    location = / {
        return 301 $scheme://$host/spotify-connector/;
    }

    # This is the key change - explicit location for /spotify-connector/
    location = /spotify-connector/ {
        alias /usr/share/nginx/html/spotify-connector/;
        try_files /index.html =404;
        add_header Cache-Control "no-store, must-revalidate";
    }

    # Static files in /spotify-connector/
    location /spotify-connector/ {
        alias /usr/share/nginx/html/spotify-connector/;
        try_files $uri $uri/ /spotify-connector/index.html;
        
        # Better caching for static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, no-transform";
        }
    }

    # API endpoints
    location /spotify-connector/api/ {
        rewrite ^/spotify-connector/api/(.*) /$1 break;
        proxy_pass http://api:8000;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
    }
}